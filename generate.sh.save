#!/bin/bash
# again shebang

# it will work also in the way touch 1 2 3
touch 1
touch 2
touch 3

# I think we want to create files under some path, so I would define it as variable
# MY_PATH='/home/my_user/bash/
# and next you can run command which creates files in next way: touch ${MY_PATH}/{1,2,3}
# {1,2,3} - in such way you can tell bash to do the same thing for all values in curly braces, it can be anything, not only numbers


# think about how would you create files is you need 100 of them?
# what other ways to create files? just google it
# by the way touch is doing more than just create file, google it :) 

# all shell scripts should start from she-bang -
# https://en.wikipedia.org/wiki/Shebang_(Unix)

# try to write comments before execution of each command, of what are you doing
# like creating archieve from 3 files, and why path is /home/user/bash, do you really created user with name 'user'. It$tar -cvf archive.tar.gz /home/user/bash 1 2 3

# again removing
rm 1 2 3


# well done as for very first one :)

# when finish whole task upgrade script taking into account such things:
# what if 1 2 3 files doesn't exist for both commands?
# what if you don't have right to create fiels under /home/user/bash
# waht happen if archieve already exists?
# if first command failed you probably don't want to run second one, how to do that?
